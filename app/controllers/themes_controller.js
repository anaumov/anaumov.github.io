// Generated by CoffeeScript 1.6.3
var _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Forum.Controllers.ThemesController = (function(_super) {
  __extends(ThemesController, _super);

  function ThemesController() {
    this._currentPageCollection = __bind(this._currentPageCollection, this);
    _ref = ThemesController.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  ThemesController.prototype.initialize = function() {
    this.mainLayout = window.Forum.mainLayout;
    this.themeLayout = new Forum.Layouts.ThemeLayout;
    this.themesCollection = new Forum.Collections.ThemesCollection;
    return this.messagesCollection = new Forum.Collections.MessagesCollection;
  };

  ThemesController.prototype.index = function(page) {
    var itemsOnPage,
      _this = this;
    if (page == null) {
      page = 1;
    }
    itemsOnPage = 5;
    this.mainLayout.head.show(new Forum.Views.Themes.NewView({
      collection: this.themesCollection
    }));
    return this._fetchThemes(function() {
      var totalThemes;
      totalThemes = _this.themesCollection.length;
      _this.mainLayout.content.show(new Forum.Views.Themes.IndexView({
        collection: _this._currentPageCollection(page, itemsOnPage)
      }));
      return _this.mainLayout.footer.show(new Forum.Views.PaginationView({
        currentPage: page,
        items: totalThemes,
        chunk: itemsOnPage
      }));
    });
  };

  ThemesController.prototype.theme = function(themeId) {
    var _this = this;
    this.mainLayout.head.close();
    this.mainLayout.footer.close();
    this.mainLayout.content.show(this.themeLayout);
    return this._fetchThemes(function() {
      var theme;
      theme = _this.themesCollection.findWhere({
        id: themeId
      });
      _this.themeLayout.themeHead.show(new Forum.Views.Themes.ShowView({
        model: theme
      }));
      return _this._renderThemeMessages(themeId);
    });
  };

  ThemesController.prototype._renderThemeMessages = function(themeId) {
    var _this = this;
    return this.messagesCollection.fetchByTheme(themeId, (function(collection) {
      _this.themeLayout.messages.show(new Forum.Views.Messages.ListView({
        collection: collection
      }));
      return _this.themeLayout.replayForm.show(new Forum.Views.Messages.NewView({
        collection: collection,
        themeId: themeId
      }));
    }));
  };

  ThemesController.prototype._currentPageCollection = function(page, chunk) {
    var offset;
    offset = (page - 1) * chunk;
    this.themesCollection.reset(this.themesCollection.slice(offset, offset + chunk));
    return this.themesCollection;
  };

  ThemesController.prototype._fetchThemes = function(callback) {
    var _this = this;
    return this.themesCollection.fetch({
      success: function() {
        return callback();
      },
      error: function() {
        return _this.mainLayout.content.show(new Forum.Views.ErrorView({
          message: 'Somthing went wrong during fetching data from server.'
        }));
      }
    });
  };

  return ThemesController;

})(Marionette.Controller);
