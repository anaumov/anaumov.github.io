// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['text!templates/themes/new.html'], function(template) {
  var _ref;
  return Forum.Views.Themes.NewView = (function(_super) {
    __extends(NewView, _super);

    function NewView() {
      _ref = NewView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    NewView.prototype.template = _.template(template);

    NewView.prototype.ui = {
      form: 'form',
      inputTitle: 'input[name=title]',
      inputDesc: 'textarea[name=description]',
      toggleButton: 'button[role=toggle-form]'
    };

    NewView.prototype.events = {
      'click button[role=submit-form]': '_createTheme',
      'click @ui.toggleButton': '_toggleForm'
    };

    NewView.prototype._createTheme = function(e) {
      if (this.ui.form[0].checkValidity()) {
        e.preventDefault();
        this.collection.create({
          title: this.ui.inputTitle.val(),
          description: this.ui.inputDesc.val()
        }, {
          wait: true
        });
        return this._clearAndCloseForm();
      }
    };

    NewView.prototype._toggleForm = function(e) {
      if (e) {
        e.preventDefault();
        e.stopPropagation();
      }
      this.ui.form.toggleClass('hidden');
      this.ui.toggleButton.toggleClass('btn-success');
      return this.ui.toggleButton.toggleClass('btn-default');
    };

    NewView.prototype._clearAndCloseForm = function() {
      this.ui.inputTitle.val('');
      this.ui.inputDesc.val('');
      return this._toggleForm();
    };

    return NewView;

  })(Backbone.Marionette.ItemView);
});
